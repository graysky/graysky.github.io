--- 
wordpress_id: 98
title: Miguel Speaks at Boston .Net Group
wordpress_url: http://208.75.86.216/?p=98
layout: post
---
Tonight I went to hear <a href="http://primates.ximian.com/~miguel/activity-log.php">Miguel de Icaza</a> speak about the <a href="http://www.mono-project.com">Mono project</a> to the <a href="http://www.bostondotnet.org">Boston .Net user group</a>. It was held at the somewhat swanky <a href="http://www.microsoft.com/mscorp/info/usaoffices/newengland/waltham.mspx">Microsoft office in Waltham</a> (several Xboxes on display, very modern looking etc.) The audience was mostly .NET developers which was interesting to see how the other half lives. And maybe I was being hyper-sensitive, but they seemed about 5% different than Java folks - about the same difference between <code>Sysout.out.println</code>
and <code>System.Console.WriteLine</code>. Not much, just a little.

Miguel is a very engaging speaker with heaps of energy and infectious enthusiasm. The crowd was definitely interested in learning more about Mono, and several had tried it out with their existing C# apps. Lots of questions from the crowd and Miguel is full of thoughtful answers. And he had help from his 2 mates, including a 17-year old who's been hacking Mono for 2 years. The progress that the Mono team have made is <i>very</i> impressive, and something the <a href="http://blogs.codehaus.org/people/geir/archives/001074_apache_harmony_j2se_project_at_the_apache_software_foundation.html">
Apache Harmony</a> folks should study closely. Miguel described ~30 developers from Novell and 300 (I think) overall with commit access - so lots of outside help.

The Mono technology is very cool in several boat-loads of ways. The number of languages that can work in the runtime is impressive (Java included). And, I know this antithetical to the Java credo, but I think being able to compile natively without requiring shipping a separate runtime is a good thing. Now there are plenty of cases where having a runtime is not a big deal, and that's splendid. But there are other cases where deployment is greatly complicated. Too bad Java has pretty much elected not to support this (aside from <a href="http://www.gnu.org/software/gcc/java/">GCJ</a>). Perhaps this one reason we haven't seen much Java on the desktop? (I think another has to do with fidelity to the OS L&F, and Mono has a good story there with Gtk#, Cocoa# and WinForms.)

Still, it is a little strange to see Miguel speaking to a group of .NET folks. I thought the original mission of Linux and Linux on the desktop was to get people to leave MS platforms? While you can argue that having technologies familar to MS developers will make it easier for them to switch, they aren't the real target audience. While it's very nice that Mono is giving companies like <a href="http://software.ericsink.com/item_10102.html">SourceGear</a> ways to make their .NET apps run on Linux, that seems like a side effect, at best. And I think the jury is still out on whether the <a href="http://ometer.com/desktop-language.html">linux desktop community</a> will write much code in C# (MonoDevelop, Beagle, FSpot are nice starts, but let's see how it spreads outside of Novell). They stayed away from Java and used C/Python/whatever in large part because it came from Sun and wasn't free, or free enough anyway. (I don't think you can credibly argue against Java on technical grounds and think that C#/Mono is a win - the two platforms are too similar.) And with the reluctance of <a href="http://log.ometer.com/2005-05.html#10">players like Red Hat</a> to adopt Mono it might be an uphill battle. But even if it doesn't have it's intended goal of helping OSS/Linux desktop developers to be more productive, I think there will be a lot of positives for the broader development community. Plus, it's just cool.
